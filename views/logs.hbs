{{> repo_header}}

<nav class="UnderlineNav">
  <div class="content">
    <div class="UnderlineNav-body">
      <a href="/deploy/{{owner}}/{{repo}}" role="tab" title="Deploy" class="UnderlineNav-item">Deploy</a>
      <a href="/secrets/{{owner}}/{{repo}}" role="tab" title="Secrets" class="UnderlineNav-item">Secrets</a>
    </div>
  </div>
</nav>
</header>

<div class="bg-white pt-3 fill">
  <div class="clearfix" style="max-width: 1200px; margin: auto;">
    <div class="col-md-5 col-sm-12 float-left p-2">
      <div class="Box">
        <div class="Box-body">
          <h4 id="pending" class="text-yellow">{{> icon_dot}} Pending</h4>
          <h4 id="success" class="text-green hidden">{{> icon_check}} Successful</h4>
          <h4 id="failure" class="text-red hidden">{{> icon_x}} Failed</h4>

          <table class="mt-3" width="100%">
            <tr>
              <td>Deployment:</td>
              <td><code>{{deployment.id}}</code></td>
            </tr>
            <tr>
              <td>Environment:</td>
              <td><code>{{deployment.environment}}</code></td>
            </tr>
            <tr>
              <td>Commit:</td>
              <td> <a
                  href="https://github.com/{{owner}}/{{repo}}/commit/{{deployment.sha}}"><code>{{deployment.sha}}</code></a>
              </td>
            </tr>
          </table>

          <h5 class="mt-3">Configuration</h5>
          <pre class="bg-gray-light p-2 mt-2"><code>{{json deployment.payload}}</code></pre>
       </div>
      </div>
    </div>

    <div class="col-md-7 col-sm-12 float-left p-2">
      <div class="Box">
        <div class="Box-body bg-gray-light">
          <div id="logs-container" style="height: 70vh; overflow-y: scroll;">
            <pre><code id="logs">{{logs}}</code></pre>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  var interval = null;
  var stop = false;
  function loadLogs() {
    if (stop) { clearInterval(interval) };

    fetch("/logs/{{owner}}/{{repo}}/{{id}}/json")
      .then(function (resp) { return resp.json() })
      .then(function (data) {
        switch (data.state) {
          case "SUCCESS":
            document.getElementById("success").classList.remove("hidden");
            document.getElementById("pending").classList.add("hidden");
            document.getElementById("failure").classList.add("hidden");
            stop = true;
            break
          case "PENDING":
          case "QUEUED":
          case "WORKING":
            document.getElementById("success").classList.add("hidden");
            document.getElementById("pending").classList.remove("hidden");
            document.getElementById("failure").classList.add("hidden");
            break
          default:
            document.getElementById("success").classList.add("hidden");
            document.getElementById("pending").classList.add("hidden");
            document.getElementById("failure").classList.remove("hidden");
            stop = true;
        }
        var container = document.getElementById("logs-container");
        var el = document.getElementById("logs");
        if (data.logs) {
          el.innerText = data.logs;
        } else {
          el.innerText += "Waiting for status...\n";
        }
        container.scrollTop = container.scrollHeight;
      })
      .catch(function (err) { console.error(err) })
  }

  loadLogs();
  interval = setInterval(loadLogs, 2000);
</script>
{{> footer}}
